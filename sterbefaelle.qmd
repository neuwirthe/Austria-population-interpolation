---
title: "Todesfälle"
format: html
---



```{r}
suppressPackageStartupMessages({
  library(tidyverse)
  library(magrittr)
  library(fs)
  library(here)
  library(ggiraph)
  library(scales)
  library(gt)
  library(ggmosaic)
  library(htmlwidgets)
  library(cowplot)
  library(lubridate)
  library(ggiraph)
  })
```

```{r}

make_chart_html <- function(chart_in, height_factor = 1) {
  height_svg <- 3.6 * height_factor
  width_svg <- 6
  sizing_width <- 0.9
  hover_inv_opacity <- "opacity:0.25;"  
  chart <- get("chart_in")
#  print(class(chart))
  girafe(
#    ggobj = chart_in, 
    ggobj = chart, 
    width_svg = width_svg, 
    height_svg = height_svg * height_factor
  ) -> ggobj
#  print(ggobj |> str())
  girafe_options(
    x = ggobj,
    opts_zoom(min = 1, max = 3),
    opts_sizing(width = sizing_width),
   opts_hover(css = "stroke:dimgrey;stroke-width:2pt;"),
    opts_hover_inv(css = hover_inv_opacity),
    opts_tooltip(
    css = "font-family:sans-serif;color:black;font-size:small;background-color:white;",
    use_fill = FALSE,
    offx = -10, offy = -20
  )

  )
}
```

```{r}
tibble(Jahr=2000:2024,
  date=paste0(Jahr,"-12-31") |>
         as.Date(),
       week=isoweek(date)) |>
  filter(week==53) |>
  pull(Jahr) ->
  years_with_53_weeks
```

```{r}
tibble(
Datum = seq(as.Date("2000-01-03"),as.Date("2025-01-01"),by=7) ,
Jahr=isoyear(Datum) |> as.integer(),
Woche=isoweek(Datum) |> as.integer()
) ->
  datum_jahr_woche
datum_jahr_woche |>
  filter(Woche==53) |>
  pull(Jahr) ->
  years_with_53_weeks
```


```{r}
sterb_raw_5y <-
  read_csv2("https://data.statistik.gv.at/data/OGD_gest_kalwo_alter_GEST_KALWOCHE_5J_100.csv")
```


```{r}
sterb_raw_5y %>%
  mutate(Jahr=str_sub(`C-KALWOCHE-0`,6,9) %>% as.integer()) %>%
  mutate(Woche=str_sub(`C-KALWOCHE-0`,10,11) %>% as.integer()) %>%
#  mutate(Alter=ifelse(str_sub(`C-ALTERGR65-0`,12,12)==1,"<65","65+")) %>%
  mutate(Altersgruppe=str_sub(`C-ALTER5-0`,8,9) |> as.integer()) %>%
  mutate(Alter=paste((Altersgruppe-1)*5,(Altersgruppe-1)*5+4,sep="-")) %>%
    mutate(BundeslandID=str_sub(`C-B00-0`,5,5) |> as.integer()) %>%
  mutate(Geschlecht=ifelse(str_sub(`C-C11-0`,5,5)==1,"m","w")) %>%
  mutate(Anzahl=`F-ANZ-1`) %>%
  left_join(datum_jahr_woche) %>%
  select(Jahr,Woche,Datum,
         Altersgruppe,
        # Alter,
         Geschlecht,BundeslandID,Anzahl) ->
 sterbedaten_5y_tmp
 sterbedaten_5y_tmp
```

```{r}
sterbedaten_5y_tmp |> 
  pull(Jahr) |>
  max() ->
  last_year
sterbedaten_5y_tmp |> 
  filter(Jahr==last_year) |>
  pull(Woche) |>
  max() ->
  last_week
```
```{r}
datum_jahr_woche |> 
         filter((Jahr < last_year) | (Woche <= last_week & Jahr == last_year)) ->
  datum_jahr_woche
```


```{r}
with(sterbedaten_5y_tmp,
     expand_grid(
#       Jahr = Jahr %>% unique(),
#       Woche = Woche %>% unique(),
       datum_jahr_woche |>
         filter(Jahr < last_year | (Woche <= last_week & Jahr==last_year)),
       Altersgruppe = Altersgruppe %>% unique(),
       Geschlecht=Geschlecht %>% unique(),
       BundeslandID=BundeslandID %>% unique()
     ) ) |> 
  arrange(Jahr,Woche,Altersgruppe) %>%
  filter(Woche <= 52 |  Jahr %in% years_with_53_weeks) |>
  filter(Jahr < last_year | Woche <= last_week) |>
  left_join(sterbedaten_5y_tmp) |>
  replace_na(list(Anzahl=0)) |>
  mutate(Alter=paste((Altersgruppe-1)*5,(Altersgruppe-1)*5+4,sep="-")) %>%
  select(-Datum) %>%
  left_join(datum_jahr_woche) %>% 
  select(Jahr,Woche,Datum,BundeslandID,Altersgruppe,Alter,everything()) ->
  sterbedaten_5y_complete
  sterbedaten_5y_complete |> tail()

```

```{r}
load(path(here(), "r_data", "pop_aut_bl_age_5y_gender_weekly.RData"))
pop_aut_bl_age_5y_gender_weekly |>
  tail()
```

```{r}
pop_aut_bl_age_5y_gender_weekly |>
mutate(Altersgruppe=pmin(Altersgruppe+1,20) |> as.integer()) |>
  mutate_at(vars(Jahr,Woche,BundeslandID,Altersgruppe), as.integer) |>
  group_by(Jahr,Woche,Datum,BundeslandID,Altersgruppe,Geschlecht) |>
  summarise(pop=sum(pop)) |>
  ungroup() ->
  pop_aut_bl_complete
  pop_aut_bl_complete |> tail()

```


```{r}
sterbedaten_5y_complete |>
  filter(Jahr >= 2002) |>
  left_join(pop_aut_bl_complete) ->
  pop_death_aut_bl_complete
```

```{r}
pop_death_aut_bl_complete |>
  filter(Jahr==max(Jahr) & Woche == 1)
```


```{r}
sterbedaten_5y_complete |>
  select(-Datum) |>
  group_by(Jahr,Woche) |>
  summarise(Anzahl=sum(Anzahl)) |>
  ungroup() |>
  left_join(datum_jahr_woche) |>
  filter(Jahr >= 2018) |>
  ggplot(aes(x=Datum,y=Anzahl)) +
  geom_line() +
  scale_y_continuous("Todesfälle pro Woche",limits=c(0,NA)) +
  theme_minimal()
```

```{r}
sterbedaten_5y_complete |>
  select(Altersgruppe,Alter) |>
  distinct() |>
  arrange(Altersgruppe) |>
  pull(Alter) ->
  alter_levels
```


```{r}
sterbedaten_5y_complete |>
  mutate(Alter=factor(Alter,levels=alter_levels)) ->
sterbedaten_5y_complete  
```



```{r}
sterbedaten_5y_complete |>
  group_by(Jahr,Woche,Altersgruppe,Alter) |>
  summarise(Anzahl=sum(Anzahl)) |>
  ungroup() ->
sterbedaten_5y  
  
sterbedaten_5y |> tail()
```
```{r}
sterbedaten_5y |>
  filter(Jahr >= 2010) |>
  mutate(Quartal=pmin(floor((Woche-1)/13),3) |> as.integer()) |>
  select(Jahr,Woche,Quartal,Altersgruppe,Alter,Anzahl) ->
  sterb_mit_quartal
```


```{r}
sterb_mit_quartal |>
group_by(Jahr,Quartal,Altersgruppe,Alter) |>
  summarise(Anzahl=sum(Anzahl)) |>
  ungroup() |>
  filter(Alter=="5-9") |>
  mutate(Time=Jahr+Quartal/4) |>
  ggplot(aes(Time,Anzahl)) +
  geom_line()
```

```{r}
years_with_53_weeks
```
```{r}
sterbedaten_5y_complete |>
  filter(Jahr>= 2018) |>
  group_by(Jahr,Alter,Altersgruppe) |>
  summarise(Anzahl=sum(Anzahl)) |>
  ungroup() |>
  mutate(Sterbealter=(Altersgruppe-1)*5+2.5) |>
  group_by(Jahr) |>
  summarise(Sterbealter=weighted.mean(Sterbealter,Anzahl)) |>
  ungroup() ->
  alle
```
```{r}
sterbedaten_5y_complete |>
  filter(Jahr>= 2018) |>
  filter(Jahr <= 2024) |>
  group_by(Jahr,Geschlecht,Alter,Altersgruppe) |>
  summarise(Anzahl=sum(Anzahl)) |>
  ungroup() |>
  mutate(Sterbealter=(Altersgruppe-1)*5+2.5) |>
  group_by(Jahr,Geschlecht) |>
  summarise(Sterbealter=weighted.mean(Sterbealter,Anzahl)) |>
  ungroup() |>
  pivot_wider(names_from = Geschlecht,
              values_from = Sterbealter) |>
  left_join(alle |>
              rename(insgesamt=Sterbealter)) |>
  gt() |>
  fmt_number(columns = 2:4, decimals=1) |>
  tab_header("Durchschnitt Sterbealter alle Ursachen")
```
```{r}
sterbedaten_5y_complete |>
  filter(Jahr>= 2018) |>
  group_by(Jahr) |>
  summarise(Anzahl=sum(Anzahl)) |>
  ungroup() ->
  sterbe_5y
```



```{r}
sterbedaten_5y_complete |>
  filter(Jahr>= 2018)  |>
  select(Alter) |>
  unique() |>
  mutate(Altersgruppe=as.character(Alter))
```
```{r}
sterbedaten_5y_complete |>
  mutate(Quartal=floor((Woche-1)/13)+1) |>
  group_by(Jahr,Quartal,Altersgruppe,Alter,Geschlecht,BundeslandID) |>
  summarise(Tote=sum(Anzahl)) |>
  ungroup() ->
  tote_bl_quart_5y_gender  
```

```{r}
load(path(here(),"r_data","pop_bl_quart_5y_gender.RData"))
```

```{r}
pop_bl_quart_5y_gender |> tail()
```


```{r}
#pop_bl_quart_5y_gender |> str()
#tote_bl_quart_5y_gender |> str()
```


```{r}
pop_bl_quart_5y_gender |>
   left_join(tote_bl_quart_5y_gender |>
               mutate(Geschlecht=str_sub(Geschlecht,1,1))) ->
  pop_tote_bl_5y_gender
```

```{r}
pop_tote_bl_5y_gender |>
  group_by(Jahr,Quartal,Alter,Altersgruppe,Geschlecht) |>
  summarise_at(vars(pop,Tote),sum) |>
  ungroup() |>
  mutate(death_rate=Tote/pop) ->
  death_rate
```
```{r}
death_rate |>
  filter(Altersgruppe == 16) |>
  filter(Geschlecht=="m") |>
  filter(Jahr >= 2015)
```

```{r}
death_rate |>
  mutate(Geschlecht=factor(Geschlecht,
                           levels=c("w","m"))) |>
  mutate(Alter=str_replace(Alter,"95-99","95+")) |>
  filter(!is.na(Alter)) |>
  filter(Jahr <= 2023) |>
  filter(Jahr >= 2015) |>
  filter(Altersgruppe >= 10) |>
  mutate(Quart=Jahr+(Quartal-1)/4) |>
  ggplot(aes(x=Quart,y=death_rate,
             color=Geschlecht)) +
  geom_line() +
  geom_vline(xintercept = 2020,
             linetype="dashed") +
  coord_cartesian(ylim=c(0,NA)) +
  facet_wrap(vars(Alter),
             scales="free_y",
             ncol=3) +
  guides(color=guide_legend(reverse=TRUE)) +
  scale_x_continuous("Jahr",breaks=seq(2016,2025,2)) +
  scale_y_continuous("Anteil Verstorbener pro Quartal") +
  theme_minimal()
```


```{r}
pop_tote_bl_5y_gender |>
  group_by(Jahr,Quartal,Alter,Altersgruppe,Geschlecht) |>
  summarise_at(vars(pop,Tote),sum) |>
  ungroup() |>
  mutate(death_rate=Tote/pop) ->
  death_rate
```
```{r}
death_rate |>
  filter(Altersgruppe == 16) |>
  filter(Geschlecht=="m") |>
  filter(Jahr >= 2015) |>
  tail()
```

```{r}
death_rate |>
  mutate(Geschlecht=factor(Geschlecht,
                           levels=c("w","m"))) |>
  mutate(Alter=str_replace(Alter,"95-99","95+")) |>
  filter(!is.na(Alter)) |>
  filter(Jahr <= 2023) |>
  filter(Jahr >= 2015) |>
  filter(Altersgruppe >= 10) |>
  mutate(Quart=Jahr+(Quartal-1)/4) |>
  ggplot(aes(x=Quart,y=death_rate,
             color=Geschlecht)) +
  geom_line() +
  geom_vline(xintercept = 2020,
             linetype="dashed") +
  coord_cartesian(ylim=c(0,NA)) +
  facet_wrap(vars(Alter),
             scales="free_y",
             ncol=3) +
  guides(color=guide_legend(reverse=TRUE)) +
  scale_x_continuous("Jahr",breaks=seq(2016,2025,2)) +
  scale_y_continuous("Anteil Verstorbener pro Quartal") +
  theme_minimal()
```


```{r}
pop_tote_bl_5y_gender |>
  group_by(Jahr,Quartal,Alter,Altersgruppe,Geschlecht) |>
  summarise_at(vars(pop,Tote),sum) |>
  ungroup() |>
  mutate(Altersgruppe=as.integer((Altersgruppe))) |>
  mutate(death_rate=Tote/pop) |>
  mutate(Quartal=as.integer(Quartal)) |>
  mutate(Zeitraum=
           case_when(
             Jahr <= 2019 ~ "bis 2019",
             Jahr == 2020 ~ "2020",
             Jahr >= 2021 ~ "ab 2021"
           )) |>
  mutate(Quart=Jahr+(Quartal-1)/4) |> 
  mutate(Geschlecht=factor(Geschlecht,
                           levels=c("w","m"))) |>
  mutate(Alter=str_replace(Alter,"95-99","95+")) |>
  filter(Jahr <= 2023 | Quartal == 1) ->
  death_rate
```
```{r}
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
```

```{r}
pal_alpha <- c("bis 2019"=0.5, "ab 2021"=0.7, "2020" = 1 )
pal_lw <- c("bis 2019"=0.2, "ab 2021"=0.6, "2020" = 1)
pal_gender <- gg_color_hue(2)
names(pal_gender) <- c("w","m")
```


```{r}
death_rate |>
#  mutate(Jahr=as.integer(Jahr)) |>
#  mutate(Geschlecht=factor(Geschlecht,
#                           levels=c("w","m"))) |>
#  filter(!is.na(Alter)) |>
  filter(Jahr <= 2024) |>
  filter(Jahr >= 2015) |>
  filter(Altersgruppe == 16) |>
  filter(Geschlecht == "m") |>
ggplot(aes(x=Quartal,y=death_rate,
           color=Geschlecht,
           group=paste(Jahr,Geschlecht),
  #         data_id=paste(Jahr,Geschlecht),
  #         tooltip=paste(Jahr,Geschlecht)
             )) +
  geom_line(aes(#alpha=Zeitraum,
                            linewidth=Zeitraum))+
#  geom_vline(xintercept = 2020,
#             linetype="dashed") +
#  scale_alpha_manual(values=pal_alpha) +
  scale_linewidth_manual(values=pal_lw) +
#  coord_cartesian(ylim=c(0,NA)) +
  facet_wrap(vars(Alter),
             scales="free_y",
             ncol=3) +
  scale_color_manual(values=pal_gender) +
  guides(color=guide_legend(reverse=TRUE)) +
#  scale_x_continuous("Jahr",breaks=seq(2016,2025,2)) +
  scale_y_continuous("Anteil Verstorbener pro Quartal",
                     label=percent) +
  theme_minimal() ->
  chart
chart |>
  make_chart_html()
```



```{r}
pal_alpha <- c("bis 2019"=0.5, "ab 2021"=0.7, "2020" = 1 )
pal_lw <- c("bis 2019"=0.2, "ab 2021"=0.6, "2020" = 1)
pal_gender <- gg_color_hue(2)
names(pal_gender) <- c("w","m")
```


```{r, fig.height=10, fig.width=5}
death_rate |>
  filter(Jahr <= 2024) |>
  filter(Jahr >= 2015) |>
  filter(Altersgruppe >= 13) |>
  filter(!is.na(Alter)) |>
#  filter(Geschlecht == "m") |>
ggplot(aes(x=Quartal,y=death_rate,
           color=Geschlecht,
           group=paste(Jahr,Geschlecht)
             )) +
  geom_line(aes(#alpha=Zeitraum,
                linewidth=Zeitraum))+
  scale_linewidth_manual(values=pal_lw) +
  coord_cartesian(ylim=c(0,NA)) +
  facet_wrap(vars(Alter),
             scales="free_y",
             ncol=2) +
  scale_color_manual(values=pal_gender) +
  guides(color=guide_legend(reverse=TRUE)) +
#  scale_x_continuous("Jahr",breaks=seq(2016,2025,2)) +
  scale_y_continuous("Anteil Verstorbener pro Quartal",
                     label=percent) +
  theme_minimal() ->
  chart
chart
```

